
// BACKUP 

// Copyright 2022 Manna Harbour
// https://github.com/manna-harbour/miryoku

// This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.

// #pragma once

// #define XXX KC_NO

// #define MIRYOKU_LAYER_BASE \
// KC_Q,              KC_W,              KC_F,              KC_P,              KC_B,              KC_J,              KC_L,              KC_U,              KC_Y,              KC_QUOT,           \
// LGUI_T(KC_A),      LALT_T(KC_R),      LCTL_T(KC_S),      LSFT_T(KC_T),      KC_G,              KC_M,              LSFT_T(KC_N),      LCTL_T(KC_E),      LALT_T(KC_I),      LGUI_T(KC_O),      \
// LT(U_BUTTON,KC_Z), ALGR_T(KC_X),      KC_C,              KC_D,              KC_V,              KC_K,              KC_H,              KC_COMM,           ALGR_T(KC_DOT),    LT(U_BUTTON,KC_SLSH),\
// U_NP,              U_NP,              LT(U_MEDIA,KC_ESC),LT(U_NAV,KC_SPC),  LT(U_MOUSE,KC_TAB),LT(U_SYM,KC_ENT),  LT(U_NUM,KC_BSPC), LT(U_FUN,KC_DEL),  U_NP,              U_NP

// #define MIRYOKU_LAYER_NAV \
// TD(U_TD_BOOT),     TD(U_TD_U_TAP),    TD(U_TD_U_EXTRA),  TD(U_TD_U_BASE),   U_NA,              U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
// KC_LGUI,           KC_LALT,           KC_LCTL,           KC_LSFT,           U_NA,              CW_TOGG,           KC_LEFT,           KC_DOWN,           KC_UP,             KC_RGHT,           \
// U_NA,              KC_ALGR,           TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    U_NA,              KC_INS,            KC_HOME,           KC_PGDN,           KC_PGUP,           KC_END,            \
// U_NP,              U_NP,              U_NA,              U_NA,              U_NA,              KC_ENT,            KC_BSPC,           KC_DEL,            U_NP,              U_NP

// #define MIRYOKU_LAYER_SYM \
// KC_LCBR,           KC_AMPR,           KC_ASTR,           KC_LCBR,           KC_RCBR,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// KC_COLN,           KC_DLR,            KC_PERC,           KC_CIRC,           KC_PLUS,           U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// KC_TILD,           KC_EXLM,           KC_AT,             KC_HASH,           KC_PIPE,           U_NA,              TD(U_TD_U_SYM),    TD(U_TD_U_MOUSE),  KC_ALGR,           U_NA,              \
// U_NP,              U_NP,              KC_LPRN,           KC_RPRN,           KC_UNDS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP

// #define MIRYOKU_ALTERNATIVES_NUM \
// KC_LBRC,           KC_7,              KC_8,              KC_9,              KC_RBRC,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// KC_SCLN,           KC_4,              KC_5,              KC_6,              KC_EQL,            U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// KC_GRV,            KC_1,              KC_2,              KC_3,              KC_BSLS,           U_NA,              TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    KC_ALGR,           U_NA,              \
// U_NP,              U_NP,              KC_DOT,            KC_0,              KC_MINS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP

// // REFERENCE
// // #define MIRYOKU_LAYER_SYM \
// // KC_LCBR,           KC_AMPR,           KC_ASTR,           KC_LPRN,           KC_RCBR,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// // KC_COLN,           KC_DLR,            KC_PERC,           KC_CIRC,           KC_PLUS,           U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// // KC_TILD,           KC_EXLM,           KC_AT,             KC_HASH,           KC_PIPE,           U_NA,              TD(U_TD_U_SYM),    TD(U_TD_U_MOUSE),  KC_ALGR,           U_NA,              \
// // U_NP,              U_NP,              KC_LPRN,           KC_RPRN,           KC_UNDS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP

// // #define MIRYOKU_ALTERNATIVES_NUM \
// // KC_LBRC,           KC_7,              KC_8,              KC_9,              KC_RBRC,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// // KC_SCLN,           KC_4,              KC_5,              KC_6,              KC_EQL,            U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// // KC_GRV,            KC_1,              KC_2,              KC_3,              KC_BSLS,           U_NA,              TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    KC_ALGR,           U_NA,              \
// // U_NP,              U_NP,              KC_DOT,            KC_0,              KC_MINS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP



// #define MIRYOKU_MAPPING( \
//       K00,  K01,  K02,  K03,  K04,         K05,  K06,  K07,  K08,  K09, \
//       K10,  K11,  K12,  K13,  K14,         K15,  K16,  K17,  K18,  K19, \
//       K20,  K21,  K22,  K23,  K24,         K25,  K26,  K27,  K28,  K29, \
//       N30,  N31,  K32,  K33,  K34,         K35,  K36,  K37,  N38,  N39 \
// ) \
// LAYOUT_split_3x6_3( \
// KC_TAB,         K00,  K01,  K02,  K03,  K04,         K05,  K06,  K07,  K08,  K09,  TD(U_BSPC_WORD), \
// KC_LEFT_SHIFT,  K10,  K11,  K12,  K13,  K14,         K15,  K16,  K17,  K18,  K19,  KC_ENT, \
// KC_LCTL,        K20,  K21,  K22,  K23,  K24,         K25,  K26,  K27,  K28,  K29,  TD(U_SHFT_CAPS) , \
//                             K32,  K33,  K34,         K35,  K36,  K37 \
// )



// REFERENCE
// #define MIRYOKU_LAYER_SYM \
// KC_LCBR,           KC_AMPR,           KC_ASTR,           KC_LPRN,           KC_RCBR,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// KC_COLN,           KC_DLR,            KC_PERC,           KC_CIRC,           KC_PLUS,           U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// KC_TILD,           KC_EXLM,           KC_AT,             KC_HASH,           KC_PIPE,           U_NA,              TD(U_TD_U_SYM),    TD(U_TD_U_MOUSE),  KC_ALGR,           U_NA,              \
// U_NP,              U_NP,              KC_LPRN,           KC_RPRN,           KC_UNDS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP

// #define MIRYOKU_ALTERNATIVES_NUM \
// KC_LBRC,           KC_7,              KC_8,              KC_9,              KC_RBRC,           U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),     \
// KC_SCLN,           KC_4,              KC_5,              KC_6,              KC_EQL,            U_NA,              KC_LSFT,           KC_LCTL,           KC_LALT,           KC_LGUI,           \
// KC_GRV,            KC_1,              KC_2,              KC_3,              KC_BSLS,           U_NA,              TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    KC_ALGR,           U_NA,              \
// U_NP,              U_NP,              KC_DOT,            KC_0,              KC_MINS,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP


sept 2023
// This is the old fucked up sym layer I tried to make better.
// #define MIRYOKU_LAYER_SYM \
// KC_NO,      KC_CIRC,           KC_AMPR,           KC_ASTR,           KC_LCBR,           KC_RCBR,             /**/     U_NA,              TD(U_TD_U_BASE),   TD(U_TD_U_EXTRA),  TD(U_TD_U_TAP),    TD(U_TD_BOOT),              KC_NO,  \
// KC_NO,      KC_COLN,           KC_DLR,            KC_PERC,           KC_CIRC,           KC_RBRC,             /**/     U_NA,              KC_LSFT,           CTRL,              KC_LALT,           GUI,                        KC_NO,  \
// KC_NO,      KC_TILD,           KC_EXLM,           KC_AT,             KC_HASH,           KC_PIPE,             /**/     U_NA,              TD(U_TD_U_SYM),    TD(U_TD_U_MOUSE),  KC_ALGR,           U_NA,                       KC_NO,  \
// U_NP,       U_NP,              U_NP,              KC_LPRN,           KC_RPRN,           KC_UNDS,             /**/     U_NA,              U_NA,              U_NA,              U_NP,              U_NP,                       U_NP 


// #define MIRYOKU_LAYER_PROG \
// KC_NO,      TD(U_TD_BOOT),     TD(U_TD_U_TAP),    TD(U_TD_U_EXTRA),  TD(U_TD_U_BASE),   U_NA,                /**/     KC_LABK,           KC_EXLM,           KC_AMPR,           KC_ASTR,           KC_GRAVE,                   KC_NO,  \
// KC_NO,      GUI,               KC_LALT,           CTRL,              KC_LSFT,           U_NA,                /**/     KC_QUOT,           KC_LPRN,           KC_LCBR,           KC_LBRC,           KC_SCLN,                    CUST_COLON_EQUAL,  \
// KC_NO,      U_NA,              KC_ALGR,           TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    U_NA,                /**/     KC_SLASH,          KC_EQUAL,          KC_MINUS,          KC_COMM,           KC_DOT,                     KC_QUES,  \
// U_NP,       U_NP,              U_NP,              U_NA,              MO(U_MEDIA),       U_NA,                /**/     MO(U_PROGB),       KC_BSPC,           KC_DEL,            U_NP,              U_NP,                       U_NP 

// #define MIRYOKU_LAYER_PROGB \
// KC_NO,      TD(U_TD_BOOT),     TD(U_TD_U_TAP),    TD(U_TD_U_EXTRA),  TD(U_TD_U_BASE),   U_NA,                /**/     KC_RABK,           KC_QUES,           KC_PIPE,           KC_CIRC,           KC_TILD,                    KC_NO,  \
// KC_NO,      GUI,               KC_LALT,           CTRL,              KC_LSFT,           U_NA,                /**/     KC_DQUO,           KC_RPRN,           KC_RCBR,           KC_RBRC,           KC_COLN,                    CUST_RIGHT_ARROW,  \
// KC_NO,      U_NA,              KC_ALGR,           TD(U_TD_U_NUM),    TD(U_TD_U_NAV),    U_NA,                /**/     KC_BSLS,           KC_PLUS,           KC_UNDS,           KC_COMM,           KC_DOT,                     KC_QUES,  \
// U_NP,       U_NP,              U_NP,              U_NA,              MO(U_MEDIA),       U_NA,                /**/     KC_LSFT,           KC_BSPC,           KC_DEL,            U_NP,              U_NP,                       U_NP 
